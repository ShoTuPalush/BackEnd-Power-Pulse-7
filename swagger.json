{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Power-pulse-7",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://backend-power-pulse-7.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Statistics",
      "description": "Endpoints for retrieving user statistics"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "paramrters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "paramrters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "paramrters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "paramrters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/update": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update user",
        "paramrters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/updateAvatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "paramrters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update avatar object",
          "required": true,
          "content": {
            "image/png": {
              "schema": {
                "$ref": "#/components/schemas/AvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Update access token",
        "paramrters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verifyAgain": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify email (send virification email)",
        "paramrters": [],
        "requestBody": {
          "description": "Verification email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with a verification token",
        "parameters": [
          {
            "in": "path",
            "name": ":verificationToken",
            "required": true,
            "type": "string",
            "description": "Verification token"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/googleAuth": {
      "get": {
        "tags": ["Auth"],
        "summary": "Authorization User",
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/addexercises": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/deldiaryexercisest": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/addPoduct": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add product",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryDeleteProductsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/deldiaryproduct": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete product by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryDeleteProductsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/diary/alldaydiary": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get added products",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "Date",
            "description": "Date dairy"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises": {
      "get": {
        "tags": ["Exercises"],
        "summary": "List of exercises categories",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SucsessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/all": {
      "get": {
        "tags": ["Exercises"],
        "summary": "List of all filtered exercises",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Limit for pagination"
          },
          {
            "in": "query",
            "name": "bodyPart",
            "type": "string",
            "description": "Body parts for filter"
          },
          {
            "in": "query",
            "name": "equipment",
            "type": "string",
            "description": "Equipment for filter"
          },
          {
            "in": "query",
            "name": "target",
            "type": "string",
            "description": "Target for filter"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SucsessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "List of products categories",

        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SucsessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/all": {
      "get": {
        "tags": ["Products"],
        "summary": "List of all filtered products",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Limit for pagination"
          },
          {
            "in": "query",
            "name": "title",
            "type": "string",
            "description": "Body parts for filter"
          },
          {
            "in": "query",
            "name": "blood",
            "type": "number",
            "description": "Equipment for filter"
          },
          {
            "in": "query",
            "name": "category",
            "type": "string",
            "description": "Target for filter"
          },
          {
            "in": "query",
            "name": "recomended",
            "type": "string",
            "description": "Target for filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SucsessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get user statistics",

        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalStatistics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwe123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              }
            }
          },
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwe123"
          }
        }
      },
      "updateRequest": {
        "type": "object",
        "required": [
          "name",
          "height",
          "currentWeight",
          "desiredWeight",
          "birthday",
          "blood",
          "levelActivity",
          "sex"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "height": {
            "type": "number",
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User currentWeight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User desiredWeight"
          },
          "birthday": {
            "type": "Date",
            "description": "User birthday"
          },
          "blood": {
            "type": "number",
            "description": "User blood"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "string",
            "description": "User levelActivity"
          }
        }
      },
      "AvatarsRequest": {
        "type": "string",
        "format": "binary",
        "required": ["avatar"]
      },
      "VerifyEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          }
        }
      },
      "refreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User refresh token"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User access token"
              },
              "refreshToken": {
                "type": "string",
                "description": "User refresh token"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              },
              "avatarUrl": {
                "type": "string",
                "descroption": "Avatar URL"
              },
              "timeSport": {
                "type": "number",
                "description": "User time sport"
              },
              "verify": {
                "type": "boolen",
                "description": "User verify"
              },
              "height": {
                "type": "number",
                "description": "User height"
              },
              "currentWeight": {
                "type": "number",
                "description": "User currentWeight"
              },
              "desiredWeight": {
                "type": "number",
                "description": "User desiredWeight"
              },
              "birthday": {
                "type": "Date",
                "description": "User birthday"
              },
              "blood": {
                "type": "number",
                "description": "User blood"
              },
              "sex": {
                "type": "string",
                "description": "User sex"
              },
              "levelActivity": {
                "type": "string",
                "description": "User levelActivity"
              },
              "bmr": {
                "type": "string",
                "description": "User bmr"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email"
          },
          "avatarUrl": {
            "type": "string",
            "descroption": "Avatar URL"
          },
          "timeSport": {
            "type": "number",
            "description": "User time sport"
          },
          "verify": {
            "type": "boolen",
            "description": "User verify"
          },
          "height": {
            "type": "number",
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User currentWeight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User desiredWeight"
          },
          "birthday": {
            "type": "Date",
            "description": "User birthday"
          },
          "blood": {
            "type": "number",
            "description": "User blood"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "string",
            "description": "User levelActivity"
          },
          "bmr": {
            "type": "string",
            "description": "User bmr"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message",
            "example": "logout was successfull"
          }
        }
      },
      "updateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "description": "User email"
          },
          "avatarUrl": {
            "type": "string",
            "descroption": "Avatar URL"
          },
          "timeSport": {
            "type": "number",
            "description": "User time sport"
          },
          "verify": {
            "type": "boolen",
            "description": "User verify"
          },
          "height": {
            "type": "number",
            "description": "User height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User currentWeight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User desiredWeight"
          },
          "birthday": {
            "type": "Date",
            "description": "User birthday"
          },
          "blood": {
            "type": "number",
            "description": "User blood"
          },
          "sex": {
            "type": "string",
            "description": "User sex"
          },
          "levelActivity": {
            "type": "number",
            "description": "User levelActivity"
          },
          "bmr": {
            "type": "number",
            "description": "User bmr"
          }
        },
        "example": {
          "name": "user",
          "email": "user@example.net",
          "avatarUrl": "string",
          "timeSport": 110,
          "verify": false,
          "height": 165,
          "currentWeight": 55,
          "desiredWeight": 60,
          "birthday": "2001-04-03",
          "blood": 2,
          "sex": "female",
          "levelActivity": 4,
          "bmr": 2100
        }
      },
      "AvatarsResponse": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "string",
            "descroption": "New avatar URL"
          }
        }
      },
      "VerifyEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      },
      "refreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string", "descroption": "access token" },
          "refreshToken": { "type": "string", "descroption": "refresh token" }
        }
      },
      "ExercisesCategory": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "filter": {
              "type": "string",
              "description": "Category name"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "imgURL": {
              "type": "string",
              "description": "Image url"
            },
            "imgURL2x": {
              "type": "string",
              "description": "Image url 2x"
            }
          }
        },
        "example": [
          {
            "filter": "Body parts",
            "name": "cardio",
            "imgURL": "https://res.cloudinary.com/dxqzi4x9j/image/upload/v1709588074/filters/1x/lg9vw5odzicgrlwwmnwc.jpg",
            "imgURL2x": "https://res.cloudinary.com/dxqzi4x9j/image/upload/v1709588096/filters/2x/alc7r8p81eaajesnk55u.jpg"
          }
        ]
      },
      "ExercisesAll": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "bodyPart": {
              "type": "string",
              "description": "Bodypart name"
            },
            "equipment": {
              "type": "string",
              "description": "equipment name"
            },
            "gifUrl": {
              "type": "string",
              "description": "GIF url"
            },
            "name": {
              "type": "string",
              "description": "Exercise name"
            },
            "target": {
              "type": "string",
              "description": "Muscle name"
            },
            "burnedCalories": {
              "type": "number",
              "description": "Number of burned calories"
            },
            "time": {
              "type": "number",
              "description": "Exercise time"
            }
          }
        },
        "example": [
          {
            "bodyPart": "upper arms",
            "equipment": "barbell",
            "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0038.gif",
            "name": "barbell drag curl",
            "target": "biceps",
            "burnedCalories": 84,
            "time": 3
          }
        ]
      },
      "ProductsCategory": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Category name"
            }
          }
        },
        "example": [
          {
            "filter": "berries"
          }
        ]
      },
      "ProductsAll": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "weight": {
              "type": "number",
              "description": "Weight"
            },
            "calories": {
              "type": "number",
              "description": "Calories"
            },
            "category": {
              "type": "string",
              "description": "Category name"
            },
            "title": {
              "type": "string",
              "description": "Name"
            },
            "groupBloodNotAllowed": {
              "type": "object",
              "properties": {
                "1": "boolean",
                "2": "boolean",
                "3": "boolean",
                "4": "boolean"
              }
            }
          }
        },
        "example": [
          {
            "weight": 100,
            "calories": 17,
            "category": "vegetables and herbs",
            "title": "Salads Belaya Dacha Delicate root",
            "groupBloodNotAllowed": {
              "1": false,
              "2": false,
              "3": false,
              "4": false
            }
          }
        ]
      },
      "SucsessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "successfull"
          }
        }
      },
      "TotalStatistics": {
        "type": "object",
        "properties": {
          "totalExerciseVideos": {
            "type": "integer",
            "description": "Total number of exercise videos in the application"
          },
          "totalBurnedCalories": {
            "type": "number",
            "description": "Total number of calories burned by all registered users"
          },
          "totalUsers": {
            "type": "integer",
            "description": "Total number of registered users in the application"
          },
          "totalTrainingHours": {
            "type": "number",
            "description": "Total number of training hours completed by registered users"
          },
          "totalWorkoutsCompleted": {
            "type": "integer",
            "description": "Total number of workouts completed by registered users"
          }
        }
      },
      "DiaryAddProductsRequest": {
        "type": "object",
        "required": ["productId", "date", "calories", "amount"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product id"
          },
          "date": {
            "type": "string",
            "description": "Date added product",
            "example": "DD/MM/YYYY"
          },
          "calories": {
            "type": "number",
            "description": "Number of calories"
          },
          "amount": {
            "type": "number",
            "description": "Number of grams",
            "example": "100"
          }
        }
      },
      "DiaryDeleteProductsRequest": {
        "type": "object",
        "required": ["productId", "date", "calories", "amount"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product id"
          },
          "date": {
            "type": "string",
            "description": "Date added product",
            "example": "DD/MM/YYYY"
          },
          "calories": {
            "type": "number",
            "description": "Number of calories"
          },
          "amount": {
            "type": "number",
            "description": "Number of grams",
            "example": "100"
          }
        },
        "example": {
          "productId": "5d51694902b2373622ff5b6f",
          "date": "2024-03-12",
          "amount": 10,
          "calories": 100
        }
      },
      "DiaryAddExerciseRequest": {
        "type": "object",
        "required": ["exerciseId", "date", "time", "calories"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "Exercise id"
          },
          "date": {
            "type": "string",
            "description": "Date added product",
            "example": "DD/MM/YYYY"
          },
          "time": {
            "type": "number",
            "description": "Number of calories"
          },
          "calories": {
            "type": "number",
            "description": "Exercise time"
          }
        },
        "example": {
          "exerciseId": "64f2458d6f67bc34bae4f912",
          "date": "2024-03-12",
          "time": 10,
          "calories": 100
        }
      },
      "DiaryGetProductsRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Aded products date",
            "example": "DD/MM/YYYY"
          }
        }
      },
      "DiaryAddProductsResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Add date",
            "example": "dd/mm/yyyy"
          },
          "owner": {
            "type": "string",
            "description": "Owner"
          },
          "burnedCalories": {
            "type": "number",
            "description": "Burned calories"
          },
          "consumedCalories": {
            "type": "number",
            "description": "Consumed calories"
          },
          "doneExercisesTime": {
            "type": "number",
            "description": "Done exercises time"
          },
          "exercises": {
            "type": "array"
          },
          "products": {
            "type": "array"
          }
        }
      },
      "DiaryAllRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Add date",
            "example": "dd/mm/yyyy"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "descroption": "Message"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Use token (or refreshToken for refreshing)"
      }
    }
  }
}
